/**
 * Module that logs most of the events within the app
 *
 * @module node-rpi-feeder/logger
 * @requires config
 * @requires path
 * @requires winston
 * @requires winston-daily-rotate-file
 */

/**
 * config module
 * @const
 */
const config = require("config");

/**
 * path module
 * @const
 */
const path = require("path");

/**
 * winston module
 * @const
 */
const winston = require("winston");

/**
 * winston-daily-rotate-file module
 * @const
 */
const DailyRotateFile = require("winston-daily-rotate-file");

// Custom format
const format = winston.format.printf(
  (info) => `[${info.timestamp}] [${info.level}]: ${info.message}`
);

/**
 * Custom logger
 *
 * @type {object}
 * @const
 */
const logger = winston.createLogger({
  level: "info",
  defaultMeta: { service: "user-service" },
  format: winston.format.combine(winston.format.timestamp(), format),
  transports: [
    new DailyRotateFile({
      datePattern: "YYYY-MM-DD-HH",
      filename: path.join(
        __dirname,
        config.get("logger.outputDirectory"),
        "application-%DATE%.log"
      ),
      maxFiles: "10",
      maxSize: "20m",
      zippedArchive: true
    })
  ]
});

logger.stream = {
  // Remove new line generated by morgan
  write: (message) => logger.info(message.substring(0, message.lastIndexOf("\n")))
};

// Set the console transport if not in production
if (process.env.NODE_ENV !== "production") {
  logger.add(
    new winston.transports.Console({
      format: winston.format.combine(winston.format.colorize(), winston.format.timestamp(), format)
    })
  );
}

module.exports = logger;
